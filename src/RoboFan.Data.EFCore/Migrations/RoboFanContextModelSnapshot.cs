// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RoboFan.Data.EFCore;

namespace RoboFan.Data.EFCore.Migrations
{
    [DbContext(typeof(RoboFanContext))]
    partial class RoboFanContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028");

            modelBuilder.Entity("RoboFan.Domain.Entities.LeagueTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Conference")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("LeagueTeam");
                });

            modelBuilder.Entity("RoboFan.Domain.Entities.RoboFan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnName("BirthDate")
                        .HasColumnType("DateTime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<Guid>("GuidId");

                    b.Property<byte[]>("Image");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.Property<int?>("PrimaryTeamId");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("PrimaryTeamId");

                    b.ToTable("RoboFan");
                });

            modelBuilder.Entity("RoboFan.Domain.Entities.RoboFanTeamRanking", b =>
                {
                    b.Property<int>("RobotFanId");

                    b.Property<int>("LeagueTeamId");

                    b.Property<int>("Ranking");

                    b.HasKey("RobotFanId", "LeagueTeamId");

                    b.HasIndex("LeagueTeamId");

                    b.ToTable("RoboFanTeamRanking");
                });

            modelBuilder.Entity("RoboFan.Domain.Entities.RoboFan", b =>
                {
                    b.HasOne("RoboFan.Domain.Entities.LeagueTeam", "PrimaryTeam")
                        .WithMany("RobotFans")
                        .HasForeignKey("PrimaryTeamId");
                });

            modelBuilder.Entity("RoboFan.Domain.Entities.RoboFanTeamRanking", b =>
                {
                    b.HasOne("RoboFan.Domain.Entities.LeagueTeam", "LeagueTeam")
                        .WithMany("FanRankings")
                        .HasForeignKey("LeagueTeamId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("RoboFan.Domain.Entities.RoboFan", "RobotFan")
                        .WithMany("FanRankings")
                        .HasForeignKey("RobotFanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
